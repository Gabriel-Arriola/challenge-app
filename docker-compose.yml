services:
  customer-service:
    build: .
    container_name: customer-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/customer_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - SPRING_LIQUIBASE_ENABLED=true
    depends_on:
      db:
        condition: service_healthy
    networks:
      - customer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./src/main/resources/db:/app/resources/db:ro

  db:
    image: postgres:15-alpine
    container_name: customer-db
    environment:
      - POSTGRES_DB=customer_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db/changelog:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - customer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - customer-network

volumes:
  postgres_data:

networks:
  customer-network:
    driver: bridge